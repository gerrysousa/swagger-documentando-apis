openapi: 3.0.1
info:
  title: API de consultório
  description: API para controlar médicos e suas especialidades dentro do consultório.
  version: 1.0.0
  termsOfService: https://github.com/gerrysousa/swagger-documentando-apis
  contact:
    name: Suporte a Devs
    email: teste@gmail.com
    url: https://github.com/gerrysousa/swagger-documentando-apis
  license:
    name: "Licença: GPLv3"
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
externalDocs:
  description: Documentação da API
  url: https://github.com/gerrysousa/swagger-documentando-apis
servers: 
- url: https://6253fe5919bc53e23476c7eb.mockapi.io
  description: API de Teste

tags:
- name: especialidades
  description: Tudo sobre especialidades
  externalDocs:
    description: Source code
    url: https://github.com/gerrysousa/swagger-documentando-apis
paths:
  /especialidades:
    get:
      tags:
      - especialidades
      summary: Recupera todas as especialidades
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Especialidades"
    post:
      tags:
      - especialidades
      summary: Cadastra uma especialidade
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                descricao:
                  type: string
      responses:
        201:
          description: Sucesso
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/Especialidade"
  /especialidades/{id}:
    parameters:
    - name: id
      in: path
      schema:
        type: integer
      required: true
    get:
      tags:
      - especialidades
      summary: Recupera uma especialidade pelo ID
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/Especialidade"
        404: 
          description: Especialidade não encontrada
          content:
            application/json:
              example: "Not found"
    put:
      tags:
      - especialidades
      summary: Atualiza uma especialidade
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                descricao:
                  type: string
      responses:
        204:
          description: Sucesso
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/Especialidade"
    delete:
      tags:
      - especialidades
      summary: Apaga uma especialidade
      responses:
        204:
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  description:
                    type: string
security: 
- auth: []
components:
  schemas:
    Especialidade: 
      type: object
      properties:
        id:
          type: integer
          title: "Id"
          description: "Identificador unico de um objeto"
          minimum: 1
        descricao:
          type: string
          title: "Descricao"
          description: "Nome de uma especialidade"
    Especialidades:
      type: array
      items: 
        $ref: "#/components/schemas/Especialidade"
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
